# Generated by Django 5.0 on 2023-12-19 05:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('canchas', '0001_initial'),
        ('reservation', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UsuarioProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Nombre')),
                ('last_name', models.CharField(default='', max_length=200, verbose_name='Apellido')),
                ('email', models.EmailField(default='', max_length=254, unique=True)),
                ('phoneNumber', models.CharField(blank=True, default='1234567890', max_length=20, verbose_name='Número de teléfono')),
                ('role', models.CharField(default='client', max_length=100, verbose_name='Crear cuenta como club')),
                ('state', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('usuarioprofile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
            bases=('registration.usuarioprofile',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('usuarioprofile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fieldsNetWorth', models.FloatField(default=0.0)),
                ('clubName', models.CharField(default='', max_length=200)),
                ('clubDescription', models.CharField(default='', max_length=200)),
                ('clubPhoto', models.ImageField(blank=True, null=True, upload_to='club_photos')),
                ('clubAddress', models.CharField(default='', max_length=200)),
                ('clubApertureTime', models.TimeField(blank=True, null=True, verbose_name='Hora de apertura')),
                ('clubClosureTime', models.TimeField(blank=True, null=True, verbose_name='Hora de cierre')),
            ],
            options={
                'verbose_name': 'Tenant',
                'verbose_name_plural': 'Tenants',
            },
            bases=('registration.usuarioprofile',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ReservationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateAtReservation', models.DateTimeField()),
                ('dateToReservate', models.DateTimeField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='canchas.field')),
                ('reservation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reservation.reservation')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='registration.client')),
            ],
        ),
        migrations.CreateModel(
            name='FieldRentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservation.reservation')),
                ('takenBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.client')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='fieldsRented',
            field=models.ManyToManyField(related_name='clients', to='registration.fieldrenthistory'),
        ),
        migrations.AddField(
            model_name='client',
            name='reservationHistory',
            field=models.ManyToManyField(related_name='clients', to='registration.reservationhistory'),
        ),
    ]
